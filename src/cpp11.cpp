// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// lostturnip.cpp
cpp11::sexp test_find_result(cpp11::function f, double a, double b, double tol, int max_iterations);
extern "C" SEXP _lostturnip_test_find_result(SEXP f, SEXP a, SEXP b, SEXP tol, SEXP max_iterations) {
  BEGIN_CPP11
    return cpp11::as_sexp(test_find_result(cpp11::as_cpp<cpp11::decay_t<cpp11::function>>(f), cpp11::as_cpp<cpp11::decay_t<double>>(a), cpp11::as_cpp<cpp11::decay_t<double>>(b), cpp11::as_cpp<cpp11::decay_t<double>>(tol), cpp11::as_cpp<cpp11::decay_t<int>>(max_iterations)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_lostturnip_test_find_result", (DL_FUNC) &_lostturnip_test_find_result, 5},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_lostturnip(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
